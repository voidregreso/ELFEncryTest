plugins {
    alias(libs.plugins.android.application)
    id 'com.chico.plugins.nativecodeprotect'
}

android {
    namespace 'com.chico.elfencrytest'
    compileSdk 34
    ndkVersion "25.1.8937393"

    defaultConfig {
        applicationId "com.chico.elfencrytest"
        minSdk 19
        targetSdk 34
        versionCode 1
        versionName "1.0"
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.22.1'
        }
    }
    buildFeatures {
        viewBinding true
    }
}

// Register the nativeCodeProtect task if it doesn't already exist
def nativeCodeProtectTask = tasks.findByName('nativeCodeProtect') ?: tasks.register('nativeCodeProtect', com.chico.plugins.NativeCodeProtectTask)

afterEvaluate {
    // For debug build type
    tasks.named('stripDebugDebugSymbols').configure { stripTask ->
        nativeCodeProtectTask.configure { task ->
            task.nativeDir.set(stripTask.outputDir)
        }
        stripTask.finalizedBy(nativeCodeProtectTask)
    }

    // For release build type
    tasks.named('stripReleaseDebugSymbols').configure { stripTask ->
        nativeCodeProtectTask.configure { task ->
            task.nativeDir.set(stripTask.outputDir)
        }
        stripTask.finalizedBy(nativeCodeProtectTask)
    }
}

dependencies {
    implementation libs.appcompat
    implementation libs.material
}
